# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import proto_env_message_pb2 as proto__env__message__pb2


class TurnBasedServerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetInitialObservation = channel.unary_unary(
        '/protos.TurnBasedServer/GetInitialObservation',
        request_serializer=proto__env__message__pb2.SubEnvInfo.SerializeToString,
        response_deserializer=proto__env__message__pb2.InitialObservation.FromString,
        )
    self.GetObservation = channel.unary_unary(
        '/protos.TurnBasedServer/GetObservation',
        request_serializer=proto__env__message__pb2.ActionInfo.SerializeToString,
        response_deserializer=proto__env__message__pb2.Observation.FromString,
        )


class TurnBasedServerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetInitialObservation(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetObservation(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TurnBasedServerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetInitialObservation': grpc.unary_unary_rpc_method_handler(
          servicer.GetInitialObservation,
          request_deserializer=proto__env__message__pb2.SubEnvInfo.FromString,
          response_serializer=proto__env__message__pb2.InitialObservation.SerializeToString,
      ),
      'GetObservation': grpc.unary_unary_rpc_method_handler(
          servicer.GetObservation,
          request_deserializer=proto__env__message__pb2.ActionInfo.FromString,
          response_serializer=proto__env__message__pb2.Observation.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'protos.TurnBasedServer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
